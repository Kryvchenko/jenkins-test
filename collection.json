{
	"info": {
		"_postman_id": "ee4c4d5a-68bb-4f15-b9e2-12da0894434d",
		"name": "Dropbox API Updated",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23524391"
	},
	"item": [
		{
			"name": "Basic endpoint test",
			"item": [
				{
					"name": "Upload",
					"item": [
						{
							"name": "Upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"pm.environment.set(\"fileId\", jsonData.id);",
											"pm.environment.set(\"filePath\", jsonData.path_display);",
											"pm.environment.set(\"fileName\", jsonData.name);",
											"",
											"pm.test(\"Verify status code should be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Correct file name is return\", function () {",
											"    pm.expect(pm.response.text()).to.include(jsonData.name);",
											"});",
											"",
											"pm.test(\"Should check uploaded file name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(environment.fileName);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/octet-stream",
										"type": "text"
									},
									{
										"key": "Dropbox-API-Arg",
										"value": "{ \"path\": \"/Homework/Intro.txt\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false }",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{addUploadBody}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{uploadUrl}}",
									"host": [
										"{{uploadUrl}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GetFileMetadata",
					"item": [
						{
							"name": "GetMetaData",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify status code should be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Correct file id is return\", function () {",
											"    pm.expect(pm.response.text()).to.include(environment.fileId);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
											"});",
											"",
											"pm.test(\"The response has id property of specific length\", () => {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.have.lengthOf(25);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{addMetaBodyText}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}sharing/get_file_metadata",
									"host": [
										"{{url}}sharing"
									],
									"path": [
										"get_file_metadata"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify status code should be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Response body should be in the correct format\", function() {",
											"    pm.expect(jsonData.metadata).to.be.a('object');",
											"});",
											"",
											"pm.test(\"Should check deleted file path\", function () {",
											"    pm.expect(jsonData.metadata.path_display).to.eql(environment.filePath);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Dropbox-API-Arg",
										"value": "{ \"path\": \"/Homework-2/Upload.txt\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false }",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Dropbox-API-Path-Root",
										"value": "{\".tag\": \"namespace_id\", \"namespace_id\": \"2\"}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Dropbox-API-Select-User",
										"value": "dbmid:FDFSVF-DFSDF",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{addDeleteBodyText}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}files/delete_v2",
									"host": [
										"{{url}}files"
									],
									"path": [
										"delete_v2"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Negative test",
			"item": [
				{
					"name": "Upload Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify that data size is 0\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.size).to.eql(0);",
									"});",
									"postman.setNextRequest('Getmetadata Negative')"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							},
							{
								"key": "Dropbox-API-Arg",
								"value": "{ \"path\": \"/Homework/EmptyBody.txt\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false }",
								"type": "text"
							},
							{
								"key": "Dropbox-API-Path-Root",
								"value": "{\".tag\": \"namespace_id\", \"namespace_id\": \"2\"}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Dropbox-API-Select-User",
								"value": "dbmid:FDFSVF-DFSDF",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{uploadUrl}}",
							"host": [
								"{{uploadUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getmetadata Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify status code should be 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"postman.setNextRequest('Delete Negative')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"file\": \"id:iSBekdwkWxoAAAAAAAA\", \n    \"actions\": []\n}"
						},
						"url": {
							"raw": "{{url}}sharing/get_file_metadata",
							"host": [
								"{{url}}sharing"
							],
							"path": [
								"get_file_metadata"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify status code should be 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Should attempt to delete user with wrong path: id\", function () {",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.error).to.exist;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Dropbox-API-Arg",
								"value": "{ \"path\": \"/Homework-2/Upload.txt\", \"mode\": \"add\", \"autorename\": true, \"mute\": false, \"strict_conflict\": false }",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Dropbox-API-Path-Root",
								"value": "{\".tag\": \"namespace_id\", \"namespace_id\": \"2\"}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Dropbox-API-Select-User",
								"value": "dbmid:FDFSVF-DFSDF",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"path\":  \"id:mcoqwecoepw\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}files/delete_v2",
							"host": [
								"{{url}}files"
							],
							"path": [
								"delete_v2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenType",
				"value": "bearer",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "{{BEARERTOKEN}}",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "Dropbox",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{clientSecret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{clientId}}",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://api.dropboxapi.com/oauth2/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://www.dropbox.com/oauth2/authorize",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"class Main {",
					"",
					"   getAccessToken() {",
					"        pm.sendRequest(",
					"            {",
					"                url: pm.environment.get(\"tokenUrl\"),",
					"                method: \"POST\",",
					"                header: {",
					"                    \"Content-Type\": \"Content-Type: application/x-www-form-urlencoded\",",
					"                },",
					"                body: {",
					"                    mode: \"urlencoded\",",
					"                    urlencoded: [",
					"                        {",
					"                            key: \"client_id\",",
					"                            value: pm.environment.get(\"clientId\"),",
					"                            disabled: false,",
					"                        },",
					"                        {",
					"                            key: \"client_secret\",",
					"                            value: pm.environment.get(\"clientSecret\"),",
					"                            disabled: false,",
					"                        },",
					"                        {",
					"                            key: \"refresh_token\",",
					"                            value: pm.environment.get(\"refreshToken\"),",
					"                            disabled: false,",
					"                        },",
					"                        { key: \"grant_type\", value: \"refresh_token\", disabled: false },",
					"                        ",
					"                    ],",
					"                },",
					"            },",
					"             function (err, res) {",
					"             pm.collectionVariables.set(\"BEARERTOKEN\", res.json().access_token);",
					"            }",
					"        );",
					"",
					"    }",
					"}",
					"",
					"class Body extends Main {",
					" ",
					"    setBodyText() {",
					"         let body = {",
					"            path: \"/Homework/Intro.txt\",",
					"            mode: \"add\",",
					"            autorename: true,",
					"            mute: false,",
					"            strict_conflict: false",
					"        }",
					"        return pm.environment.set(\"addUploadBody\", JSON.stringify(body));",
					"    }",
					"",
					"    setMetaDataBodyText() {",
					"        let body = {",
					"               file: \"{{fileId}}\",",
					"               actions: []",
					"         }",
					"         return pm.environment.set(\"addMetaBodyText\", JSON.stringify(body));",
					"    }",
					"",
					"    setDeleteBodyText() {",
					"        let body = {",
					"            path: \"{{filePath}}\"",
					"       }",
					"        return pm.environment.set(\"addDeleteBodyText\", JSON.stringify(body));",
					"    }",
					"}",
					"",
					"const newMain = new Main();",
					"newMain.getAccessToken();",
					"const newBody = new Body();",
					"newBody.setBodyText();",
					"newBody.setMetaDataBodyText();",
					"newBody.setDeleteBodyText();",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BEARERTOKEN",
			"value": ""
		}
	]
}